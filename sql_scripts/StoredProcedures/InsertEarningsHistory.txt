USE [Stock_Information]
GO
/** Object:  StoredProcedure [dbo].[InsertIndicators]    Script Date: 10/14/2023 1:34:36 PM **/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[InsertEarningsHistory]
        @param_stock_id AS VARCHAR(16),
        @param_data_type AS VARCHAR(16),
		@param_four_back VARCHAR(10),
		@param_four_date AS VARCHAR(32),
		@param_three_back AS VARCHAR(10),
		@param_three_date AS VARCHAR(32),
		@param_two_back AS VARCHAR(10),
		@param_two_date AS VARCHAR(32),
		@param_one_back AS VARCHAR(10),
		@param_one_date AS VARCHAR(32)
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;

	DECLARE @stock_id AS INT;
    DECLARE @data_type AS VARCHAR(16);
	DECLARE @four_back AS DECIMAL(8, 2);
	DECLARE @four_date AS DATE;
	DECLARE @three_back AS DECIMAL(8, 2);
    DECLARE @three_date AS DATE;
    DECLARE @two_back AS DECIMAL(8, 2);
    DECLARE @two_date AS DATE;
    DECLARE @one_back AS DECIMAL(8, 2);
	DECLARE @one_date AS DATE;

	SET @stock_id = TRY_CAST(REPLACE( @param_stock_id, ',', '') AS INT)
	SET @data_type = @param_data_type 
	SET @four_back = TRY_CAST(REPLACE( @param_four_back, ',', '') AS DECIMAL(8, 2))
	SET @four_date = TRY_CAST(REPLACE( @param_four_date, ',', '') AS DATE)
	SET @three_back = TRY_CAST(REPLACE( @param_three_back, ',', '') AS DECIMAL(8, 2))
	SET @three_date = TRY_CAST(REPLACE( @param_three_date, ',', '') AS DATE)
	SET @two_back = TRY_CAST(REPLACE( @param_two_back, ',', '') AS DECIMAL(8, 2))
	SET @two_date = TRY_CAST(REPLACE( @param_two_date, ',', '') AS DATE)
	SET @one_back = TRY_CAST(REPLACE( @param_one_back, ',', '') AS DECIMAL(8, 2))
	SET @one_date = TRY_CAST(REPLACE( @param_one_date, ',', '') AS DATE)


	IF EXISTS (
        SELECT 1
        FROM dbo.EarningsHistory
        WHERE stock_id = @stock_id
    )
    BEGIN
        -- If there are existing records for the stock_id, update those records
        UPDATE dbo.EarningsHistory
        SET four_back = @four_back,
			four_date = @four_date,
            three_back = @three_back,
            three_date = @three_date,
            two_back = @two_back,
            two_date = @two_date,
            one_back = @one_back,
			one_date = @one_date
        WHERE stock_id = @stock_id
			AND data_type = @data_type
			AND four_date <> @four_date;
    END
    ELSE
    BEGIN
        -- If there are no matching records for the stock_id, insert the new record
		INSERT INTO dbo.EarningsHistory( stock_id, data_type, four_back, four_date, three_back, three_date, two_back, two_date, one_back, one_date ) 
		VALUES ( @stock_id, @data_type, @four_back, @four_date, @three_back, @three_date, @two_back, @two_date, @one_back, @one_date ); 
    END

END