USE [Stock_Information]
GO
/** Object:  StoredProcedure [dbo].[InsertIndicators]    Script Date: 10/14/2023 1:34:36 PM **/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[InsertEarningsHistory]
        @param_stock_id AS VARCHAR(16),
        @param_data_order AS VARCHAR(4),
		@param_year VARCHAR(32),
		@param_average AS VARCHAR(16),
		@param_actual AS VARCHAR(16),
		@param_difference AS VARCHAR(16)

AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;

	DECLARE @stock_id AS INT;
    DECLARE @data_order AS INT;
	DECLARE @year VARCHAR(32);
	DECLARE @average AS VARCHAR(16);
	DECLARE @actual AS VARCHAR(16);
    DECLARE @difference AS VARCHAR(16);

	SET @stock_id = TRY_CAST(REPLACE( @param_stock_id, ',', '') AS INT)
	SET @data_order = TRY_CAST(REPLACE( @param_data_order, ',', '') AS INT) 
	SET @year = @param_year
	SET @average = @param_average
	SET @actual = @param_actual
	SET @difference = @param_difference


	IF EXISTS (
        SELECT 1
        FROM dbo.EarningsHistory
		WHERE stock_id = @stock_id AND data_order = @data_order
    )
    BEGIN
        -- If there are existing records for the stock_id, update those records
        UPDATE dbo.EarningsHistory
        SET year = @year,
			average = @average,
			actual = @actual,
			difference = @difference
        WHERE stock_id = @stock_id
			AND data_order = @data_order
			AND year <> @year;
    END
    ELSE
    BEGIN
        -- If there are no matching records for the stock_id, insert the new record
		INSERT INTO dbo.EarningsHistory( stock_id, data_order, year, average, actual, difference ) 
		VALUES ( @stock_id, @data_order, @year, @average, @actual, @difference ); 
    END

END