USE [Stock_Information]
GO
/** Object:  StoredProcedure [dbo].[InsertIndicators]    Script Date: 10/14/2023 1:34:36 PM **/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[InsertEarningsEstimate]
        @param_stock_id AS VARCHAR(16),
		@param_data_order AS VARCHAR(4),
        @param_date AS VARCHAR(32),
		@param_average VARCHAR(16),
		@param_low AS VARCHAR(16),
		@param_high AS VARCHAR(16)
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;

	DECLARE @stock_id AS INT;
	DECLARE @data_order AS INT;
    DECLARE @date AS VARCHAR(32);
	DECLARE @average VARCHAR(16);
	DECLARE @low AS VARCHAR(16);
	DECLARE @high AS VARCHAR(16);

	SET @stock_id = TRY_CAST(REPLACE( @param_stock_id, ',', '') AS INT)
	SET @data_order = TRY_CAST(REPLACE( @param_data_order, ',', '') AS INT)
	SET @date = @param_date
	SET @average = @param_average
	SET @low = @param_low
	SET @high = @param_high

    -- Insert statements for procedure here
	IF EXISTS (
        SELECT 1
        FROM dbo.EarningsEstimate
        WHERE stock_id = @stock_id AND data_order = @data_order
    )
    BEGIN
        -- If there are existing records for the stock_id, update those records
        UPDATE dbo.EarningsEstimate
        SET date = @date,
			average = @average,
			low = @low,
			high = @high
        WHERE stock_id = @stock_id
			AND data_order = @data_order
			AND date <> @date;
    END
    ELSE
    BEGIN
        -- If there are no matching records for the stock_id, insert the new record
		INSERT INTO dbo.EarningsEstimate( stock_id, data_order, date, average, low, high ) 
		VALUES ( @stock_id, @data_order, @date, @average, @low, @high ); 
    END

END