USE [Stock_Information]
GO
/** Object:  StoredProcedure [dbo].[InsertIndicators]    Script Date: 10/14/2023 1:34:36 PM **/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/** INSERT PRICE **/
ALTER PROCEDURE [dbo].[InsertPrice]
        @param_stock_id AS VARCHAR(16),
        @param_date AS VARCHAR(64),
		@param_open_price AS VARCHAR(16),
		@param_close_price AS VARCHAR(16),
		@param_low_price AS VARCHAR(16),
		@param_high_price AS VARCHAR(16),
		@param_percent_change AS VARCHAR(16),
		@param_adjusted_close_price AS VARCHAR(16),
		@param_volume AS VARCHAR(32)
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;

	DECLARE @stock_id AS INT;
    DECLARE @date AS DATE;
	DECLARE @open_price AS DECIMAL(18, 2);
	DECLARE @close_price AS DECIMAL(18, 2);
	DECLARE @low_price AS DECIMAL(18, 2);
    DECLARE @high_price AS DECIMAL(18, 2);
    DECLARE @percent_change AS DECIMAL(18, 2);
    DECLARE @adjusted_close_price AS DECIMAL(18, 2);
    DECLARE @volume AS INT;

	SET @stock_id = TRY_CAST(REPLACE( @param_stock_id, ',', '') AS INT)
	SET @date = TRY_CAST(REPLACE( @param_date, ',', '') AS DATE)
	SET @open_price = TRY_CAST(REPLACE( @param_open_price, ',', '') AS DECIMAL(18, 2))
	SET @close_price = TRY_CAST(REPLACE( @param_close_price, ',', '') AS DECIMAL(18, 2))
	SET @low_price = TRY_CAST(REPLACE( @param_low_price, ',', '') AS DECIMAL(18, 2))
	SET @high_price = TRY_CAST(REPLACE( @param_high_price, ',', '') AS DECIMAL(18, 2))
	SET @percent_change = TRY_CAST(REPLACE( @param_percent_change, ',', '') AS DECIMAL(18, 2))
	SET @adjusted_close_price = TRY_CAST(REPLACE( @param_adjusted_close_price, ',', '') AS DECIMAL(18, 2))
	SET @volume = TRY_CAST(REPLACE( @param_volume, ',', '') AS INT)


    -- Insert statements for procedure here
    INSERT INTO dbo.Price( stock_id, date, open_price, close_price, low_price, high_price, percent_change, adjusted_close_price, volume ) 
	VALUES ( @stock_id, @date, @open_price, @close_price, @low_price, @high_price, @percent_change, @adjusted_close_price, @volume ); 

END